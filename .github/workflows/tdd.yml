name: tdd
on:
  push:
    branches:
      - master
    paths-ignore:
      - "README.md"
      - ".vscode/**"

  pull_request:
    branches:
      - master
    paths-ignore:
      - "README.md"
      - ".vscode/**"

jobs:
  build:
    runs-on: ubuntu-latest
    container: python:3.11-slim

    # Required services
    services:
      # Label used to access the service container
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: wishlist
          POSTGRES_DB: wishlistdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # Steps for the build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install libraries for PostgreSQL
        run: |
          apt-get update
          apt-get install -y gcc libpq-dev

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Linting
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 service tests --count --select=E9,F63,F7,F82 --show-source --statistics
          # test for complexity. The GitHub editor is 127 chars wide
          flake8 service tests --count --max-complexity=10 --max-line-length=127 --statistics
          # Run pylint to catch other PEP8 errors
          pylint service tests --max-line-length=127

      - name: Run unit tests with green
        run: |
          export FLASK_APP=service:app
          flask db-create
          green
        env:
          DATABASE_URI: "postgresql://postgres:wishlist@postgres:5432/wishlistdb"

      # Uncomment the following 2 lines during hands-on lab

      - name: Upload code coverage
        uses: codecov/codecov-action@v3.1.4
